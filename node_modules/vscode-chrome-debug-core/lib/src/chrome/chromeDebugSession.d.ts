import { DebugProtocol } from 'vscode-debugprotocol';
import { DebugSession } from 'vscode-debugadapter';
import { IDebugAdapter } from './debugAdapterInterfaces';
export declare class ChromeDebugSession extends DebugSession {
    private _adapterProxy;
    constructor(targetLinesStartAt1: boolean, isServer?: boolean, adapter?: IDebugAdapter);
    /**
     * Overload sendEvent to log
     */
    sendEvent(event: DebugProtocol.Event): void;
    /**
     * Overload sendResponse to log
     */
    sendResponse(response: DebugProtocol.Response): void;
    private onLog(msg, level);
    /**
     * Takes a response and a promise to the response body. If the promise is successful, assigns the response body and sends the response.
     * If the promise fails, sets the appropriate response parameters and sends the response.
     */
    private sendResponseAsync(request, response, responseP);
    /**
     * Overload dispatchRequest to dispatch to the adapter proxy instead of debugSession's methods for each request.
     */
    protected dispatchRequest(request: DebugProtocol.Request): void;
}
